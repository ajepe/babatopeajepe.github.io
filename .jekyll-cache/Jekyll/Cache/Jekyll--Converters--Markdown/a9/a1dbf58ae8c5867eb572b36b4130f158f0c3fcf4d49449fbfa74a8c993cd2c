I"Û<p>ODOO REST API documentation, the module can be downladed here https://www.odoo.com/apps/modules/12.0/restful it rely on the existing Odoo RPC API interface implementation. It is kind of JSON on http implementation :(</p>

<p>It helps to ease the integration of any third party application with Odoo without the need mastering RPC protocol, it exposes all Odoo RPC methods over HTTP in a fluent and easy way without secrificing speed and performance.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>To use the module a deep knowledge of Odoo and its RPC API interface is required without that you may find it a bit difficult to navigate your way through especially when dealing with *2many.
</code></pre></div></div>

<p>How to request for access token</p>

<p>An access token is a credential that can be used by an application to access an API or restricted information on a server, it is required in other to be able to perform any operations and this token once generated should alway be send a long side any subsequents request either through the headers information or as part of the requests body.</p>

<p>```python 
import requests, json</p>

<p>headers = {
    â€˜charsetâ€™:â€™utf-8â€™,
    â€˜content-typeâ€™: â€˜application/x-www-form-urlencodedâ€™,
}
data = {
    â€˜loginâ€™: â€˜adminâ€™,
    â€˜passwordâ€™: â€˜adminâ€™,
    â€˜dbâ€™: â€˜demo_dbâ€™ # This should be replace with your database.
}
base_url = â€˜http://example.comâ€™</p>

<p>req = requests.get(â€˜{}/api/auth/tokenâ€™.format(base_url), 
  data=data, headers=headers)</p>

<p>content = json.loads(req.content.decode(â€˜utf-8â€™))</p>

<h1 id="or-add-the-access-token-to-the-headers">or add the access token to the headers</h1>
<p>headers[â€˜access-tokenâ€™] = content.get(â€˜access_tokenâ€™) 
print(headers)</p>

<p>Deleting An Acccess Token</p>

<p>Some times, an access token might have been compromised, or there may be need to change the existing token as a result of security concerned, below request can be make to delete the user access token.</p>

<p>For any request to be approved after deleting the token, a new token need to be generated as described above.</p>

<p>req = requests.delete(â€˜%s/api/auth/tokenâ€™%base_url, data=data, headers=headers)</p>

<p>Search [GET] Read Request</p>

<p>Takes a search domain, returns a recordset of matching records. Can return a subset of matching records (offset and limit parameters) and be ordered (order parameter).</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>import requests

url = "http://localhost:8069/api/sale.order"

payload = "{"limit": 20, "fields": "['id', 'partner_id', 'name']", "domain":"[('id', '&gt;', '10')]", "offset":3}" # json

headers = {
'access-token': "access_token_66899e07f4369120dafa63a13e56f749a4e6fbe3",
'content-type': "application/json"
}

response = requests.request("GET", url, data=payload, headers=headers)

print(response.text)
</code></pre></div></div>

<p>Create [POST] Create Request</p>

<p>Takes a dictionary of field values, or a list of such dictionaries, and returns a recordset containing the records created.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>import requests

url = "http://localhost:8069/api/sale.order"

payload = "{"partner_id": 10, "__api__order_line":"[(0, 0,  {'product_id': 1,'price_unit':4000})]"}"
headers = {
  'content-type': "application/json",
  'access-token': "access_token_66899e07f4369120dafa63a13e56f749a4e6fbe3"
}

response = requests.request("POST", url, data=payload, headers=headers)

print(response.text)
</code></pre></div></div>

<p>PUT Request [Write]</p>

<p>Takes a number of field values, writes them to all the records in its recordset. Does not return anything.</p>

<p>p = requests.put(â€˜http://theninnercicle.com.ng/api/res.partner/68â€™, headers=headers,
                 data=json.dumps({
    â€˜nameâ€™:â€™John Doeâ€™,
    â€˜country_idâ€™: 107,
    â€˜category_idâ€™: [{â€˜idâ€™: 10}]
    }
))
print(p.content)</p>

<p>DELETE Request</p>

<p>Deletes the records of the current set.</p>

<p>p = requests.delete(â€˜http://theninnercicle.com.ng/api/res.partner/68â€™, headers=headers)
print(p.content)</p>
:ET